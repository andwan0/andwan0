Cover the distance

You are given cars objects that have data members tank capacity and q. You need to find how many fillings of gas do they require so that they can reach a distance d. Intially cars have 0 gas.
Each car can only travel 1+(tank capacity%q) at a time after which we need to fill it completely. So we fill only when the gas is 0. And we fill the tank to its fill capacity on each fill.

Input Format:
The first line of testcase contains T denoting the number of testcases. T testcases follow. The first line of testcase contains n(number of cars) and d(distance to cover). The next n lines contains tank capacity and q for all n cars.

Output Format:
For each testcase, in a new line, print the fillings required for each car to cover d distance.

Your Task:
Since this is a function problem, you need to only complete the function fillings(Car cars[], int n, int distance) which taks an array of cars, the number of casrs n, and the distance to cover.

Constraints:
1 <= T <= 100
1 <= n <= 100
1 <= distance <= 100
1 <= tank capacity <=100
1 <= q <= 100

Example:
Input:
1
7 21
8 1
8 2
8 3
8 4
8 5
8 6
8 9
Output:
21 21 7 21 6 7 3

Explanation:
Testcase1: d=21
car 1: d=8, q=1. So with each filling it can travel 1+(8%1)=1+0=1. So we need to travel 1+1+1+...21 times
car 2: d=8, q=2. So with each filling it can travel 1+(8%2)=1+0=1. So we need to travel 1+1+1+...21 times
car 3: d=8, q=3. So with each filling it can travel 1+(8%3)=1+2=3. So we need to travel 3+3+3+...7 times
car 4: d=8, q=4. So with each filling it can travel 1+(8%4)=1+0=1. So we need to travel 1+1+1+...21 times
car 5: d=8, q=5. So with each filling it can travel 1+(8%5)=1+3=4. So we need to travel 4+4+4+...6 times
car 6: d=8, q=6. So with each filling it can travel 1+(8%6)=1+2=3. So we need to travel 3+3+3+...7 times
car 7: d=8, q=9. So with each filling it can travel 1+(8%9)=1+8=9. So we need to travel 9+9+9